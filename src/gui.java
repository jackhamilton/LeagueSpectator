
import java.awt.Dimension;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jack
 */
public class gui extends javax.swing.JFrame {

    /**
     * Creates new form gui
     */
    public static DefaultListModel model = new DefaultListModel();
    public String region = "na";
    public String summonername = "";
    public String summonerToggle = "";
    
    public gui() {
        initComponents();
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - getHeight()) / 2);
        setLocation(x, y);
        spectate.setVisible(false);
        champion.setVisible(false);
        Thread t = new Thread(new main());
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        las = new javax.swing.JToggleButton();
        eune = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        oce = new javax.swing.JToggleButton();
        br = new javax.swing.JToggleButton();
        euw = new javax.swing.JToggleButton();
        summonerName = new javax.swing.JTextField();
        tr = new javax.swing.JToggleButton();
        ru = new javax.swing.JToggleButton();
        na = new javax.swing.JToggleButton();
        lan = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        jMenuItem1 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        solo5v5 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        solo5v5descriptor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        notingame = new javax.swing.JLabel();
        spectate = new javax.swing.JButton();
        champion = new javax.swing.JLabel();

        jFrame1.setResizable(false);

        jButton3.setText("Add");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        las.setText("LAS");
        las.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lasActionPerformed(evt);
            }
        });

        eune.setText("EUNE");
        eune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                euneActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Region");

        oce.setText("OCE");
        oce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oceActionPerformed(evt);
            }
        });

        br.setText("BR");
        br.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brActionPerformed(evt);
            }
        });

        euw.setText("EUW");
        euw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                euwActionPerformed(evt);
            }
        });

        summonerName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        summonerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                summonerNameKeyTyped(evt);
            }
        });

        tr.setText("TR");
        tr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trActionPerformed(evt);
            }
        });

        ru.setText("RU");
        ru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ruActionPerformed(evt);
            }
        });

        na.setSelected(true);
        na.setText("NA");
        na.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naActionPerformed(evt);
            }
        });

        lan.setText("LAN");
        lan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Summoner Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(las)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oce)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ru)
                        .addGap(29, 29, 29))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(summonerName, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(na)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(euw)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(eune)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(br)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tr)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(85, 85, 85)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(summonerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eune)
                    .addComponent(euw)
                    .addComponent(na)
                    .addComponent(br)
                    .addComponent(tr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(las)
                    .addComponent(oce)
                    .addComponent(lan)
                    .addComponent(ru))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Remove Player");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add Player");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Watchlist");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Solo 5v5");

        solo5v5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/leagues/placing.png"))); // NOI18N

        name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("PLAYER NAME");

        solo5v5descriptor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        solo5v5descriptor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        solo5v5descriptor.setText("Seeding");

        jList1.setModel(model);
        jList1.setCellRenderer(new iconListRenderer());
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        notingame.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        notingame.setText("NOT IN GAME");

        spectate.setText("Spectate Game");
        spectate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spectateActionPerformed(evt);
            }
        });

        champion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        champion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/championicons/ChampionSquare.png"))); // NOI18N
        champion.setText("[Champion]");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(solo5v5descriptor, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(spectate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(solo5v5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(67, 67, 67)
                                                .addComponent(jLabel2)))))
                                .addGap(0, 68, Short.MAX_VALUE))
                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(champion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(notingame)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(name)
                        .addGap(60, 60, 60)
                        .addComponent(champion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(notingame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spectate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(solo5v5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(solo5v5descriptor))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jFrame1.setSize(310,250);
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - jFrame1.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - jFrame1.getHeight()) / 2);
        jFrame1.setLocation(x, y);
        jFrame1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void summonerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_summonerNameKeyTyped
        jButton3.setEnabled(true);
    }//GEN-LAST:event_summonerNameKeyTyped

    private void naActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naActionPerformed
        region = "na";
        euw.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_naActionPerformed

    private void euwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_euwActionPerformed
        region = "euw";
        na.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_euwActionPerformed

    private void euneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_euneActionPerformed
        region = "eune";
        euw.setSelected(false);
        na.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_euneActionPerformed

    private void brActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brActionPerformed
        region = "br";
        euw.setSelected(false);
        eune.setSelected(false);
        na.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_brActionPerformed

    private void trActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trActionPerformed
        region = "tr";
        euw.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        na.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_trActionPerformed

    private void lasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lasActionPerformed
        region = "las";
        euw.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        na.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_lasActionPerformed

    private void oceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oceActionPerformed
        region = "oce";
        euw.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        na.setSelected(false);
    }//GEN-LAST:event_oceActionPerformed

    private void lanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lanActionPerformed
        region = "lan";
        euw.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        ru.setSelected(false);
        na.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_lanActionPerformed

    private void ruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ruActionPerformed
        region = "ru";
        euw.setSelected(false);
        eune.setSelected(false);
        br.setSelected(false);
        tr.setSelected(false);
        na.setSelected(false);
        lan.setSelected(false);
        las.setSelected(false);
        oce.setSelected(false);
    }//GEN-LAST:event_ruActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        summonername = summonerName.getText();
        jFrame1.setVisible(false);
        if (!summonername.equals("") && infoRetriever.doesSummonerExist(summonername, region)) {
            model.addElement(summonername + " (" + region.toUpperCase() + ")");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        if (jList1.getSelectedIndex() != -1) {
            String s = jList1.getSelectedValue().toString();
            if (!summonerToggle.equals(s.substring(0, s.lastIndexOf("(") - 1))) {
                try {
                    name.setText(s.substring(0, s.lastIndexOf("(") - 1));
                    String solo = infoRetriever.getSummonerLeaguesByName(s.substring(0, s.lastIndexOf("(") - 1), s.substring(s.lastIndexOf("(") + 1, s.lastIndexOf(")")));
                    solo5v5descriptor.setText(solo);
                    String tier = "";
                    String rank = "placing";
                    if (!solo.equals("SEEDING")) {
                        rank = solo.substring(solo.indexOf(" ") + 1, solo.length());
                        tier = solo.substring(0, solo.indexOf(" ") + 1);
                        rank = rank.replaceAll("III", "3");
                        rank = rank.replaceAll("IV", "4");
                        rank = rank.replaceAll("II", "2");
                        rank = rank.replaceAll("V", "5");
                        rank = rank.replaceAll("I", "1");
                        tier = tier.replaceAll(" ", "_");
                        tier = tier.toLowerCase();
                    }
                    solo5v5.setIcon(new ImageIcon(getClass().getResource("/img/leagues/" + tier + rank + ".png")));
                    if (infoRetriever.isPlayerInGame(s.substring(0, s.lastIndexOf("(") - 1), s.substring(s.lastIndexOf("(") + 1, s.lastIndexOf(")")))) {
                        notingame.setVisible(false);
                        spectate.setVisible(true);
                        champion.setVisible(true);
                    } else {
                        notingame.setVisible(true);
                        spectate.setVisible(false);
                        champion.setVisible(false);
                    }
                } catch (Exception e) {
                    System.err.println(e.getCause().toString());
                }
                summonerToggle = s.substring(0, s.lastIndexOf("(") - 1);
                try {
                    String summoner = s.substring(0, s.lastIndexOf("(") - 1);
                    String spectateInfo = infoRetriever.getSpectateInfo(summoner, s.substring(s.lastIndexOf("(") + 1, s.lastIndexOf(")")));
                    summoner = summoner.toLowerCase();
                    summoner = summoner.replaceAll(" ", "");
                    int champID = Integer.parseInt(spectateInfo.substring(spectateInfo.indexOf("\"championId\": ", spectateInfo.indexOf("\"summonerInternalName\": \"" + summoner) - 65) + 14, 
                            spectateInfo.indexOf("\"summonerInternalName\": \"" + summoner) - 7));
                    String champName;
                    ImageIcon champIcon;
                    switch (champID) {
                        case 266:
                            champName = "Aatrox";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AatroxSquare.png"));
                            break;
                        case 103:
                            champName = "Ahri";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AhriSquare.png"));
                            break;
                        case 84:
                            champName = "Akali";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AkaliSquare.png"));
                            break; 
                        case 12:
                            champName = "Alistar";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AlistarSquare.png"));
                            break;
                        case 32:
                            champName = "Amumu";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AmumuSquare.png"));
                            break; 
                        case 34:
                            champName = "Anivia";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AniviaSquare.png"));
                            break;
                        case 1:
                            champName = "Annie";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AnnieSquare.png"));
                            break;          
                        case 22:
                            champName = "Ashe";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/AsheSquare.png"));
                            break;
                        case 53:
                            champName = "Blitzcrank";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/BlitzcrankSquare.png"));
                            break;
                        case 63:
                            champName = "Brand";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/BrandSquare.png"));
                            break;
                        case 51:
                            champName = "Caitlyn";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/CaitlynSquare.png"));
                            break;
                        case 69:
                            champName = "Cassiopeia";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/CassiopeiaSquare.png"));
                            break;
                        case 31:
                            champName = "Cho'Gath";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/ChoGathSquare.png"));
                            break;            
                        case 42:
                            champName = "Corki";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/CorkiSquare.png"));
                            break;              
                        case 122:
                            champName = "Darius";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/DariusSquare.png"));
                            break;                
                        case 131:
                            champName = "Diana";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/DianaSquare.png"));
                            break;                 
                        case 36:
                            champName = "Dr. Mundo";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/DrMundoSquare.png"));
                            break;              
                        case 119:
                            champName = "Draven";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/DravenSquare.png"));
                            break;              
                        case 60:
                            champName = "Elise";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/EliseSquare.png"));
                            break;              
                        case 28:
                            champName = "Evelynn";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/EvelynnSquare.png"));
                            break;              
                        case 9:
                            champName = "Fiddlesticks";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/FiddlesticksSquare.png"));
                            break;              
                        case 114:
                            champName = "Fiora";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/FioraSquare.png"));
                            break;              
                        case 105:
                            champName = "Fizz";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/FizzSquare.png"));
                            break;                
                        case 3:
                            champName = "Galio";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/GalioSquare.png"));
                            break;                    
                        case 41:
                            champName = "Gangplank";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/GangplankSquare.png"));
                            break;                    
                        case 86:
                            champName = "Garen";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/GarenSquare.png"));
                            break;                    
                        case 79:
                            champName = "Gragas";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/GragasSquare.png"));
                            break;                    
                        case 104:
                            champName = "Graves";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/GravesSquare.png"));
                            break;                    
                        case 120:
                            champName = "Hecarim";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/HecarimSquare.png"));
                            break;                    
                        case 74:
                            champName = "Heimerdinger";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/HeimerdingerSquare.png"));
                            break;                    
                        case 39:
                            champName = "Irelia";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/IreliaSquare.png"));
                            break;                    
                        case 40:
                            champName = "Janna";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/JannaSquare.png"));
                            break;                    
                        case 59:
                            champName = "Jarvan IV";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/JarvanIVSquare.png"));
                            break;                    
                        case 24:
                            champName = "Jax";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/JaxSquare.png"));
                            break;                    
                        case 126:
                            champName = "Jayce";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/JayceSquare.png"));
                            break;                    
                        case 222:
                            champName = "Jinx";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/JinxSquare.png"));
                            break;                    
                        case 43:
                            champName = "Karma";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KarmaSquare.png"));
                            break;                    
                        case 30:
                            champName = "Karthus";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KarthusSquare.png"));
                            break;                    
                        case 38:
                            champName = "Kassadin";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KassadinSquare.png"));
                            break;                    
                        case 55:
                            champName = "Katarina";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KatarinaSquare.png"));
                            break;                    
                        case 10:
                            champName = "Kayle";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KayleSquare.png"));
                            break;                    
                        case 85:
                            champName = "Kennen";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KennenSquare.png"));
                            break;                    
                        case 121:
                            champName = "Kha'Zix";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KhaZixSquare.png"));
                            break;                    
                        case 96:
                            champName = "Kog'Maw";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/KogMawSquare.png"));
                            break;                    
                        case 7:
                            champName = "LeBlanc";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/LeBlancSquare.png"));
                            break;                    
                        case 64:
                            champName = "Lee Sin";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/LeeSinSquare.png"));
                            break;                    
                        case 89:
                            champName = "Leona";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/LeonaSquare.png"));
                            break;                    
                        case 127:
                            champName = "Lissandra";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/LissandraSquare.png"));
                            break;                         
                        default:
                            champName = "";
                            champIcon = new ImageIcon(getClass().getResource("/img/championicons/ChampionSquare.png"));
                            break;
                    }
                    champion.setText(champName);
                    champion.setIcon(champIcon);
                }catch (Exception e){
                    System.err.println(e.getCause().toString());
                }
                
            }
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void spectateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spectateActionPerformed
        infoRetriever ret = new infoRetriever();
        String s = jList1.getSelectedValue().toString();
        try {
        if (ret.isPlayerInGame(name.getText(), s.substring(s.lastIndexOf("(") + 1, s.lastIndexOf(")")))) {
            String output = ret.generateSpectateCommand(name.getText(), s.substring(s.lastIndexOf("(") + 1, s.lastIndexOf(")")));
            Robot r = new Robot();
            StringSelection selection = new StringSelection(output);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(selection, selection);
            r.keyPress(KeyEvent.VK_WINDOWS);
            r.keyPress(KeyEvent.VK_R);
            r.keyRelease(KeyEvent.VK_WINDOWS);
            r.keyRelease(KeyEvent.VK_R);
            Thread.sleep(100);
            r.keyPress(KeyEvent.VK_CONTROL);
            r.keyPress(KeyEvent.VK_V);
            r.keyRelease(KeyEvent.VK_CONTROL);
            r.keyRelease(KeyEvent.VK_V);
            r.keyPress(KeyEvent.VK_ENTER);
            r.keyRelease(KeyEvent.VK_ENTER);
        } else {
            System.out.println("Summoner not in game.");
        }
        } catch (Exception e) {
            System.err.println("Failed.");
        }
    }//GEN-LAST:event_spectateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        model.remove(jList1.getSelectedIndex());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton br;
    private javax.swing.JLabel champion;
    private javax.swing.JToggleButton eune;
    private javax.swing.JToggleButton euw;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JList jList1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton lan;
    private javax.swing.JToggleButton las;
    private javax.swing.JToggleButton na;
    public javax.swing.JLabel name;
    private javax.swing.JLabel notingame;
    private javax.swing.JToggleButton oce;
    private javax.swing.JToggleButton ru;
    public javax.swing.JLabel solo5v5;
    private javax.swing.JLabel solo5v5descriptor;
    private javax.swing.JButton spectate;
    private javax.swing.JTextField summonerName;
    private javax.swing.JToggleButton tr;
    // End of variables declaration//GEN-END:variables
}
